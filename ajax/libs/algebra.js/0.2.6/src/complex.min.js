var Expression=require("./expressions").Expression,isInt=require("./helper").isInt,Fraction=require("./fractions"),Complex=function(r,i){if(!(r instanceof Fraction&&i instanceof Fraction))throw new TypeError("Invalid Argument ("+r.toString()+", "+i.toString()+"): Real and imaginary parts must be of type Fraction.");this.real=r,this.imaginary=i};Complex.prototype.copy=function(){return new Complex(this.real,this.imaginary)},Complex.prototype.add=function(r){var i=this.copy();if(r instanceof Fraction||isInt(r))i.real=i.real.add(r);else{if(!(r instanceof Complex))throw new TypeError("Invalid Argument ("+r.toString()+"): Summand must be of type Complex, Fraction or Integer.");i.real=i.real.add(r.real),i.imaginary=i.imaginary.add(r.imaginary)}return i},Complex.prototype.subtract=function(r){var i=this.copy();if(r instanceof Fraction||isInt(r))i.real=i.real.subtract(r);else{if(!(r instanceof Complex))throw new TypeError("Invalid Argument ("+r.toString()+"): Subtrahend must be of type Complex, Fraction or Integer.");i.real=i.real.subtract(r.real),i.imaginary=i.imaginary.subtract(r.imaginary)}return i},Complex.prototype.multiply=function(r){if(r instanceof Fraction||isInt(r)){var i=this.copy();return i.real=i.real.multiply(r),i.imaginary=i.imaginary.multiply(r),i}if(r instanceof Complex){var e=new Expression("i").multiply(this.imaginary).add(this.real),t=new Expression("i").multiply(r.imaginary).add(r.real),n=e.multiply(t),a=n._quadraticCoefficients(),r=a.a,o=a.b,l=a.c,p=r.multiply(-1).add(l);return new Complex(p,o)}throw new TypeError("Invalid Argument ("+r.toString()+"): Multiplicand must be of type Complex, Fraction or Integer.")},Complex.prototype.divide=function(r){if(r instanceof Fraction||isInt(r)){var i=this.copy();return i.real=i.real.divide(r),i.imaginary=i.imaginary.divide(r),i}if(r instanceof Complex){var e=new Complex(r.real,r.imaginary.multiply(-1)),t=this.multiply(e),n=r.multiply(e).real;return t.divide(n)}throw new TypeError("Invalid Argument ("+r.toString()+"): Divisor must be of type Complex, Fraction or Integer.")},module.exports=Complex;
